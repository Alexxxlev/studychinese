let save = {
    content: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
    className: 'air-datepicker-button save',
    Click: function() {
        $("#datepicker").datepicker('hide');
    }
}

// –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
new AirDatepicker('#airdatepicker', {
    isMobile: true,
    // inline: true,
    autoClose: true,
    // position: 'top',
    // range: true,
    // multipleDatesSeparator: ' - '
    // timepicker: true,

    // Handle render process
    /*onRenderCell({date, cellType}) {
        let dates = [1, 5, 7, 10, 15, 20, 25],
        emoji = ['üíï', 'üòÉ', 'üçô', 'üç£', 'üçª', 'üéâ', 'ü•Å'],
        isDay = cellType === 'day',
        _date = date.getDate(),
        shouldChangeContent = isDay && dates.includes(_date),
        randomEmoji = emoji[Math.floor(Math.random() * emoji.length)];
  
        return {
            html: shouldChangeContent ? randomEmoji : false,
            classes: shouldChangeContent ? '-emoji-cell-' : false
        }
    }*/
    
    buttons: ['clear', save],
    locale: {
        days: ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'],
        daysShort: ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'],
        daysMin: ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å'],
        months: ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å', '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'],
        monthsShort: ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä—Ç', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω—å', '–ò—é–ª—å', '–ê–≤–≥', '–°–µ–Ω', '–û–∫—Ç', '–ù–æ—è', '–î–µ–∫'],
        save: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
        clear: '–°–±—Ä–æ—Å–∏—Ç—å',
        dateFormat: 'dd.MM.yyyy',
        timeFormat: 'hh:mm aa',
        firstDay: 0
    }
});